{"version":3,"sources":["components/TaskItem/TaskItem.js","components/AddTask/AddTask.js","App.js","index.js"],"names":["TaskItem","props","className","done","type","checked","onChange","checkItem","onClick","text","deleteItem","AddTask","setTaskTitleValue","e","setState","taskTitle","target","value","addItem","state","trim","addOnEnterPressed","key","this","onKeyPress","placeholder","autoFocus","React","Component","App","taskItems","push","id","Date","now","find","item","filter","localStorage","length","setItem","JSON","parse","getItem","stringify","map","ReactDOM","render","document","getElementById"],"mappings":"0RAwBeA,G,MArBE,SAAAC,GAAK,OAClB,yBACIC,UAAYD,EAAME,KAA0C,mCAAnC,kCAEzB,2BACIC,KAAK,WACLC,QAASJ,EAAME,MAAQ,UACvBG,SAAUL,EAAMM,UAChBL,UAAU,mBAEd,0BACIM,QAASP,EAAMM,UACfL,UAAYD,EAAME,KAAsB,iCAAf,cAExBF,EAAMQ,MAEX,0BAAMD,QAASP,EAAMS,WAAYR,UAAU,+BAA3C,WCmBOS,G,kBAlCX,WAAYV,GAAQ,IAAD,8BACf,4CAAMA,KAMVW,kBAAoB,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAACC,UAAWF,EAAEG,OAAOC,SAPzC,EASnBC,QAAU,WAAO,IACNH,EAAa,EAAKI,MAAlBJ,UACPA,GAAa,EAAKd,MAAMiB,QAAQH,EAAUK,QAC1C,EAAKN,SAAS,CAACC,UAAW,MAZX,EAenBM,kBAAoB,SAAAR,GAAC,MAAc,UAAVA,EAAES,KAAmB,EAAKJ,WAb/C,EAAKC,MAAQ,CACTJ,UAAW,IAHA,E,sEAkBf,OACI,yBAAKb,UAAU,wBACX,2BACII,SAAUiB,KAAKX,kBACfY,WAAYD,KAAKF,kBACjBJ,MAAOM,KAAKJ,MAAMJ,UAClBU,YAAY,eACZvB,UAAU,0BACVwB,WAAS,IAEjB,4BAAQxB,UAAU,8BAA8BM,QAASe,KAAKL,SAA9D,U,GA7BUS,IAAMC,YCgDbC,G,kBA7CX,WAAY5B,GAAO,IAAD,8BACd,4CAAMA,KAOViB,QAAU,SAAAH,GAAS,OACf,EAAKD,UAAS,SAAAK,GAAK,OACfA,EAAMW,UAAUC,KACZ,CACIC,GAAIC,KAAKC,MACTzB,KAAMM,EACNZ,MAAM,QAdJ,EAmBlBI,UAAY,SAAAyB,GAAE,OAAI,EAAKlB,UAAS,SAAAK,GAC5B,IAAMd,EAAU,EAAKc,MAAMW,UAAUK,MAAK,SAAAC,GAAI,OAAIA,EAAKJ,IAAMA,KAC7D,OAAO3B,EAAQF,MAAQE,EAAQF,SArBjB,EAwBlBO,WAAa,SAAAsB,GAAE,OAAI,EAAKlB,SAAS,CAACgB,UAAW,EAAKX,MAAMW,UAAUO,QAAO,SAAAD,GAAI,OAAIA,EAAKJ,IAAMA,SAtBvFM,aAAaC,QAAUD,aAAaE,QAAQ,QAAS,MACtD,EAAKrB,MAAQ,CACTW,UAAWW,KAAKC,MAAMJ,aAAaK,QAAQ,WAJjC,E,sEA0BR,IAAD,OAEL,OADAL,aAAaE,QAAQ,QAASC,KAAKG,UAAUrB,KAAKJ,MAAMW,YAEpD,yBAAK5B,UAAU,OACVqB,KAAKJ,MAAMW,UAAUe,KAAI,SAAAT,GAAI,OAC1B,kBAAC,EAAD,CACI7B,UAAW,kBAAM,EAAKA,UAAU6B,EAAKJ,KACrCtB,WAAY,kBAAM,EAAKA,WAAW0B,EAAKJ,KACvCvB,KAAM2B,EAAK3B,KACXN,KAAMiC,EAAKjC,KACXmB,IAAKc,EAAKJ,QAGlB,kBAAC,EAAD,CAASd,QAASK,KAAKL,e,GAxCrBS,IAAMC,YCAxBkB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2b3e81b0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TaskItem.sass'\r\n\r\nconst TaskItem = props =>\r\n    <div\r\n        className={!props.done ? \"task__item alert alert-success\" : \"task__item alert alert-secondary\"}\r\n    >\r\n        <input\r\n            type=\"checkbox\"\r\n            checked={props.done && \"checked\"}\r\n            onChange={props.checkItem}\r\n            className=\"task__checkbox\"\r\n        />\r\n        <span\r\n            onClick={props.checkItem}\r\n            className={!props.done ? \"task__text\" : \"task__text task__text--checked\"}\r\n        >\r\n            {props.text}\r\n        </span>\r\n        <span onClick={props.deleteItem} className=\"task__button btn btn-danger\">\r\n            Ã—\r\n        </span>\r\n    </div>\r\n\r\nexport default TaskItem;\r\n","import React from 'react';\r\nimport './AddTask.sass'\r\n\r\nclass AddTask extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            taskTitle: ''\r\n        }\r\n    }\r\n\r\n    setTaskTitleValue = e => this.setState({taskTitle: e.target.value});\r\n\r\n    addItem = () => {\r\n        const {taskTitle} = this.state;\r\n        taskTitle && this.props.addItem(taskTitle.trim());\r\n        this.setState({taskTitle: ''});\r\n    }\r\n\r\n    addOnEnterPressed = e => e.key === 'Enter' && this.addItem();\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"add__task form-group\">\r\n                <input\r\n                    onChange={this.setTaskTitleValue}\r\n                    onKeyPress={this.addOnEnterPressed}\r\n                    value={this.state.taskTitle}\r\n                    placeholder=\"Add new task\"\r\n                    className=\"add__input form-control\"\r\n                    autoFocus\r\n                />\r\n            <button className=\"add__button btn btn-primary\" onClick={this.addItem}>+</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTask;\r\n","import React from 'react';\nimport TaskItem from './components/TaskItem/TaskItem'\nimport AddTask from './components/AddTask/AddTask'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        !localStorage.length && localStorage.setItem('tasks', '[]');\n        this.state = {\n            taskItems: JSON.parse(localStorage.getItem('tasks'))\n        }\n    }\n\n    addItem = taskTitle =>\n        this.setState(state =>\n            state.taskItems.push(\n                {\n                    id: Date.now(),\n                    text: taskTitle,\n                    done: false,\n                }\n            )\n        );\n\n    checkItem = id => this.setState(state => {\n        const checked = this.state.taskItems.find(item => item.id == id);\n        return checked.done = !checked.done;\n    });\n\n    deleteItem = id => this.setState({taskItems: this.state.taskItems.filter(item => item.id != id)});\n\n    render() {\n        localStorage.setItem('tasks', JSON.stringify(this.state.taskItems));\n        return(\n            <div className=\"app\">\n                {this.state.taskItems.map(item =>\n                    <TaskItem\n                        checkItem={() => this.checkItem(item.id)}\n                        deleteItem={() => this.deleteItem(item.id)}\n                        text={item.text}\n                        done={item.done}\n                        key={item.id}\n                    />\n                )}\n                <AddTask addItem={this.addItem}/>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}